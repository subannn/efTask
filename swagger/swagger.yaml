basePath: /
definitions:
  models.Song:
    properties:
      group:
        type: string
      song:
        type: string
    type: object
  models.SongQuery:
    properties:
      group:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8085
info:
  contact: {}
  description: API для управления песнями
  title: Song API
  version: "1.0"
paths:
  /deleteSong/{id}:
    delete:
      description: Удаляет песню по ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Успешное удаление
          schema:
            type: string
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить песню
      tags:
      - songs
  /getSongText/{id}:
    get:
      description: Возвращает текст песни по ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Текст песни
          schema:
            type: string
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить текст песни
      tags:
      - songs
  /getSongs:
    get:
      consumes:
      - application/json
      description: Возвращает список песен с возможностью фильтрации и пагинации
      parameters:
      - description: Название группы
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: song_name
        type: string
      - description: Дата выпуска
        in: query
        name: release_date
        type: string
      - default: 10
        description: Количество записей
        in: query
        name: limit
        type: integer
      - default: 0
        description: Смещение для пагинации
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список песен
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить список песен
      tags:
      - songs
  /saveSong:
    post:
      consumes:
      - application/json
      description: Сохраняет информацию о песне, включая дату выпуска, текст и ссылку
        на внешние данные
      parameters:
      - description: Данные песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: ID сохраненной песни
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Ошибка привязки данных
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Сохранить песню
      tags:
      - songs
  /updateSong/{id}:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о песне по ID
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления песни
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.SongQuery'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное обновление
          schema:
            type: string
        "400":
          description: Неверный запрос
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновить песню
      tags:
      - songs
swagger: "2.0"
